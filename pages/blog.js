import Head from 'next/head'
import Link from 'next/link'
import { sanityClient, urlFor } from "../client"
import {
  Wrapper,
  HomeLeft,
  HomeRight,
} from '../components/styles/IndexGrid.styled'
import IndexHeader from '../components/IndexSections/indexHeader'
import SubscribeForm from '../components/SubscribeForm'  
import styled from 'styled-components'



//STYLES
const SubscribeWrapper = styled.div`
margin-left: 150px;
margin-top: 60px;
@media only screen and (max-width: 1024px) {
  margin-top: 150px;
  margin-left: 0;
  padding: 10px;
}
`

const Title = styled.h2`
`

  
 const PostTitle = styled.div`
 font-weight: bold;
 font-size: 30px;
 text-decoration: underline;
 color: #007ba5;
 cursor: pointer;
`

const Date = styled.div`
`

const Description = styled.div`
font-size: 20px;
@media only screen and (max-width: 768px) {
}
`
//END STYLES

export default function Home({posts}) {
  return (
    <>
      <Head>
        <title>Elsa Hovey | Development/ D
          esign</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Wrapper>
        <HomeLeft>
          <IndexHeader />
             </HomeLeft>



               <HomeRight>
               <SubscribeWrapper>
                <Title>Recent Posts</Title>
                 
                   <div>
                   {posts &&
                    posts.map((post, index) => (
                      // eslint-disable-next-line react/jsx-key
                      <Link href={`post/${post.slug.current}`}>
                      <span key={index}>
                        <PostTitle>{post.title}</PostTitle>
                        <Date>date</Date>
                        <Description>{post.description}</Description>
                      </span>
                      </Link>
                    ))
                    }
                    </div>
                   <SubscribeForm />

                   </SubscribeWrapper>

                    </HomeRight>
                    </Wrapper>
    </>
  )
}


export const getServerSideProps = async() => {
  const query = '*[ _type == "post"]'
  const posts = await sanityClient.fetch(query)
  if (!posts.length) {
    return {
      props: {
        posts: [],
      },
    }
  } else {
    return {
      props: {
        posts,
      },
    }
  }
}
 