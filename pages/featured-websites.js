import Head from 'next/head'
import { sanityClient, urlFor } from "../client"
import {
  Wrapper,
  HomeLeft,
  HomeRight,
} from '../components/styles/IndexGrid.styled'
import IndexHeader from '../components/IndexSections/indexHeader'
import styled from 'styled-components'


 
//STYLES
 const SiteWrapper = styled.div`
display: flex;
justify-content: center;
margin: 50px 100px;
@media only screen and (max-width: 1024px) {
margin: 150px 100px;
}
@media only screen and (max-width: 360px) {
margin: 150px 50px;
}
`



 const Description = styled.span`
 padding: 25px;
 font-size: 15px;
@media only screen and (max-width: 1024px) {
  padding: 15px;
  font-size: 12px;
}
`


 

 const SiteGrid = styled.div`
display: grid;
grid-template-columns: repeat(2, 360px);
grid-gap: 2.5em;
cursor: pointer;
.image {
    width: 100%;
    height: 215px;
    border-top: solid 2px black;
    border-bottom: solid 2px black;
}
@media only screen and (max-width: 1024px) {
  display: grid;
grid-template-columns: repeat(2, 300px);
grid-gap: 3em;
}
@media only screen and (max-width: 600px) {
  display: grid;
  grid-template-columns: 260px;
  grid-gap: 3em;
}
 
 
`

 const PostTitles = styled.h4`
 font-size: 22px;
 padding: 10px;
@media only screen and (max-width: 1024px) {
 font-size: 16px;
padding: 2px;
}
`

 const GridSquare = styled.h4`
background: teal;
border: solid 2px black;
border-radius: 45px;
text-align: center;
height: 360px;
transition: all 0.3s ease;
&:hover{
    transform: rotate(3deg);
   }
   a {
       color: #000;
       text-decoration: none;
   }
@media only screen and (max-width: 1024px) {
}
@media only screen and (max-width: 768px) {
}
`

 const Tags = styled.h4`
font-size: 15px;
padding: 5px;
@media only screen and (max-width: 1024px) {
font-size: 12px;
padding: 5px;
}
`
//END STYLES


export default function Home({posts}) {
  return (
    <>
      <Head>
        <title>Elsa Hovey | Development/ D
          esign</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Wrapper>
        <HomeLeft>
          <IndexHeader />
             </HomeLeft>

               <HomeRight>
                <SiteWrapper> 
                  <SiteGrid>
                  {posts &&
                    posts.map((post, index) => (   
                      <span key={index}>
                        
                        <GridSquare>
                        <a href={post.projectLink} target="_blank" rel="noreferrer">
                      <PostTitles>{post.title}</PostTitles>
                        <Description>{post.description}</Description>
                      <img 
                          src={urlFor(post.imgUrl)}
                          alt="main pic"
                          className="image"
                          
                          />
                        <Tags>-{post.tags}</Tags>
                        </a>

                      </GridSquare>
                      </span>
                      ))}
                      </SiteGrid>
                      </SiteWrapper>
                    </HomeRight>
                    </Wrapper>
    </>
  )
}


export const getServerSideProps = async() => {
  const query = '*[ _type == "websites"]'
  const posts = await sanityClient.fetch(query)
  if (!posts.length) {
    return {
      props: {
        posts: [],
      },
    }
  } else {
    return {
      props: {
        posts,
      },
    }
  }
}
 