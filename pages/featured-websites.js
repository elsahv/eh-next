/* eslint-disable @next/next/no-img-element */
import Head from 'next/head'
import { sanityClient, urlFor } from "../client"
import styled from 'styled-components'


 


export const Content = styled.span`
font-size: 18px;
margin: 15px 85px;
padding: 25px;
display: flex;
justify-content: center;
`


export const Description = styled.span`
 padding: 25px;
 font-size: 13px;
`


export const Wrapper = styled.div`
display: flex;
justify-content: center;
background: #3aa1aa;
border: solid 2px black;
margin-top: 120px;
padding: 70px;
`

export const Grid = styled.div`
padding: 55px;
display: grid;
grid-template-columns: repeat(4, 370px);
grid-gap: 3em;
cursor: pointer;
.image {
    width: 100%;
    height: 215px;
    border-top: solid 2px black;
    border-bottom: solid 2px black;
}

@media only screen and (max-width: 1024px) {
    display: grid;
grid-template-columns: repeat(2, 350px);
grid-template-rows: repeat(2, 350px);
grid-gap: 3em;
}

@media only screen and (max-width: 768x) {
    display: grid;
grid-template-columns: 350px;
grid-template-rows: repeat(4, 350px);
grid-gap: 3em;
}
`

export const PostTitles = styled.h4`
 font-size: 20px;
 padding: 5px;
 
`

export const GridSquare = styled.h4`
background: teal;
border: solid 2px black;
border-radius: 45px;
text-align: center;
height: 340px;
transition: all 0.3s ease;
&:hover{
    transform: rotate(3deg);
   }
   a {
       color: #000;
       text-decoration: none;
   }
`

export const Tags = styled.h4`
font-size: 12px;
`


export default function Misc({posts}) {
  return (
    <>  
      <Head>
        <title>Elsa Hovey | Featured Websites</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>     
     
     <Wrapper> 
        
    
       <Grid>
       {posts &&
        posts.map((post, index) => (   
          <span key={index}>
             
            <GridSquare>
            <a href={post.projectLink} target="_blank" rel="noreferrer">
          <PostTitles>{post.title}</PostTitles>
            <Description>{post.description}</Description>
          <img 
               src={urlFor(post.imgUrl)}
               alt="main pic"
               className="image"
              
               />
            <Tags>-{post.tags}</Tags>
            </a>

          </GridSquare>
          </span>
          ))}
          </Grid>
          </Wrapper>
    </>
  )
}


export const getServerSideProps = async () => {
  const query = '*[ _type == "websites"] | order(_createdAt desc)[0..9]'
  const posts = await sanityClient.fetch(query)

  if (!posts.length) {
    return {
      props: {
        posts: [],
      },
    }
  } else {
    return {
      props: {
        posts,
      },
    }
  }
}
 